/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  DateTimeFieldUpdateOperationsInput: { // input type
    set?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  FloatFieldUpdateOperationsInput: { // input type
    decrement?: number | null; // Float
    divide?: number | null; // Float
    increment?: number | null; // Float
    multiply?: number | null; // Float
    set?: number | null; // Float
  }
  FloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: NexusGenInputs['NestedFloatFilter'] | null; // NestedFloatFilter
    notIn?: number[] | null; // [Float!]
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  MovieCreateInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    language: string; // String!
    medium_cover_image: string; // String!
    rating?: number | null; // Float
    summary: string; // String!
    title: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MovieOrderByInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    language?: NexusGenEnums['SortOrder'] | null; // SortOrder
    medium_cover_image?: NexusGenEnums['SortOrder'] | null; // SortOrder
    rating?: NexusGenEnums['SortOrder'] | null; // SortOrder
    summary?: NexusGenEnums['SortOrder'] | null; // SortOrder
    title?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  MovieUpdateInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    language?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    medium_cover_image?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    rating?: NexusGenInputs['FloatFieldUpdateOperationsInput'] | null; // FloatFieldUpdateOperationsInput
    summary?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    title?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
  }
  MovieWhereInput: { // input type
    AND?: NexusGenInputs['MovieWhereInput'][] | null; // [MovieWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    language?: NexusGenInputs['StringFilter'] | null; // StringFilter
    medium_cover_image?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['MovieWhereInput'][] | null; // [MovieWhereInput!]
    OR?: NexusGenInputs['MovieWhereInput'][] | null; // [MovieWhereInput!]
    rating?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    summary?: NexusGenInputs['StringFilter'] | null; // StringFilter
    title?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  MovieWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  NestedDateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedFloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: NexusGenInputs['NestedFloatFilter'] | null; // NestedFloatFilter
    notIn?: number[] | null; // [Float!]
  }
  NestedIntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringFieldUpdateOperationsInput: { // input type
    set?: string | null; // String
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  JustResponse: { // root type
    code: string; // String!
    message: string; // String!
  }
  Movie: { // root type
    id: number; // Int!
    language: string; // String!
    medium_cover_image: string; // String!
    rating: number; // Float!
    summary: string; // String!
    title: string; // String!
  }
  Mutation: {};
  Query: {};
  Response: { // root type
    code: string; // String!
    message: string; // String!
    movie: NexusGenRootTypes['Movie']; // Movie!
  }
  Subscription: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  JustResponse: { // field return type
    code: string; // String!
    message: string; // String!
  }
  Movie: { // field return type
    id: number; // Int!
    language: string; // String!
    medium_cover_image: string; // String!
    rating: number; // Float!
    summary: string; // String!
    title: string; // String!
  }
  Mutation: { // field return type
    addMovie: NexusGenRootTypes['Response']; // Response!
    createOneMovie: NexusGenRootTypes['Movie']; // Movie!
    deleteOneMovie: NexusGenRootTypes['Movie'] | null; // Movie
    updateOneMovie: NexusGenRootTypes['Movie'] | null; // Movie
  }
  Query: { // field return type
    getmovie: NexusGenRootTypes['Movie']; // Movie!
    getmovies: Array<NexusGenRootTypes['Movie'] | null>; // [Movie]!
    givemeError: string | null; // String
    movie: NexusGenRootTypes['Movie'] | null; // Movie
    movies: NexusGenRootTypes['Movie'][]; // [Movie!]!
    suggestions: Array<NexusGenRootTypes['Movie'] | null>; // [Movie]!
  }
  Response: { // field return type
    code: string; // String!
    message: string; // String!
    movie: NexusGenRootTypes['Movie']; // Movie!
  }
  Subscription: { // field return type
    movieDelete: NexusGenRootTypes['JustResponse']; // JustResponse!
  }
}

export interface NexusGenFieldTypeNames {
  JustResponse: { // field return type name
    code: 'String'
    message: 'String'
  }
  Movie: { // field return type name
    id: 'Int'
    language: 'String'
    medium_cover_image: 'String'
    rating: 'Float'
    summary: 'String'
    title: 'String'
  }
  Mutation: { // field return type name
    addMovie: 'Response'
    createOneMovie: 'Movie'
    deleteOneMovie: 'Movie'
    updateOneMovie: 'Movie'
  }
  Query: { // field return type name
    getmovie: 'Movie'
    getmovies: 'Movie'
    givemeError: 'String'
    movie: 'Movie'
    movies: 'Movie'
    suggestions: 'Movie'
  }
  Response: { // field return type name
    code: 'String'
    message: 'String'
    movie: 'Movie'
  }
  Subscription: { // field return type name
    movieDelete: 'JustResponse'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addMovie: { // args
      rating: number; // Int!
      title: string; // String!
    }
    createOneMovie: { // args
      data: NexusGenInputs['MovieCreateInput']; // MovieCreateInput!
    }
    deleteOneMovie: { // args
      where: NexusGenInputs['MovieWhereUniqueInput']; // MovieWhereUniqueInput!
    }
    updateOneMovie: { // args
      data: NexusGenInputs['MovieUpdateInput']; // MovieUpdateInput!
      where: NexusGenInputs['MovieWhereUniqueInput']; // MovieWhereUniqueInput!
    }
  }
  Query: {
    getmovie: { // args
      id: number; // Int!
    }
    getmovies: { // args
      limit?: number | null; // Int
      rating?: number | null; // Float
    }
    movie: { // args
      where: NexusGenInputs['MovieWhereUniqueInput']; // MovieWhereUniqueInput!
    }
    movies: { // args
      after?: NexusGenInputs['MovieWhereUniqueInput'] | null; // MovieWhereUniqueInput
      before?: NexusGenInputs['MovieWhereUniqueInput'] | null; // MovieWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['MovieOrderByInput'][] | null; // [MovieOrderByInput!]
      where?: NexusGenInputs['MovieWhereInput'] | null; // MovieWhereInput
    }
    suggestions: { // args
      id: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}